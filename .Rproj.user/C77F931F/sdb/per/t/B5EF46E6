{
    "collab_server" : "",
    "contents" : "# X=c(\"x1\",\"x2\") # independent variables\n# M=c(\"m1\",\"m2\",\"m3\")   # mediation variables\n# Y=c(\"Y1\",\"Y2\")   #dependent variables\n\n\n#'Add line feed to string\n#'\n#'@param x A string\n#'@param ... one or more R objects, to be converted to character vectors.\naddLine=function(x,...){\n    if(x==\"\") x<-paste0(...)\n    else x<-paste0(x,\"\\n\",...)\n    x\n}\n\n#'Add `+` mark to string\n#'\n#'@param x A string\n#'@param ... one or more R objects, to be converted to character vectors.\naddPlus=function(x,...){\n  if(x==\"\") x<-paste0(...)\n  else x<-paste0(x,\"+\",...)\n  x\n}\n\n#' Make mediation equations 1\n#'\n#' @param X A character vectors indicating independent variables\n#' @param M A character vectors indicating mediators\n#' @param stage An integer indicating the order\n#' @param start An integer\n#' @param add2ndMediation whether or not make a 2nd mediation equation\nmakeEquation1=function(X,M,stage=1,start=0,add2ndMediation=TRUE){\n  countX=length(X)\n  countM=length(M)\n\n  equation=\"\"\n\n  for(i in 1:countM){\n    sub=\"\"\n    for(j in 1:countX){\n      sub=addPlus(sub,letters[stage],start+(i-1)*countX+j,\"*\",X[j])\n    }\n    if(add2ndMediation &(countM>1)&(i>1)){\n      sub=addPlus(sub,\"d\",i-1,\"*\",M[i-1])\n    }\n    temp=paste0(M[i],\"~\",sub)\n    equation=addLine(equation,temp)\n  }\n  equation\n}\n\n#' Make mediation equations 2\n#'\n#' @param X A character vectors indicating independent variables\n#' @param M A character vectors indicating mediators\n#' @param Y A character vectors indicating dependent variables\nmakeEquation2=function(X,M,Y){\n  countX=length(X)\n  countM=length(M)\n  countY=length(Y)\n\n  equation=\"\"\n\n  for(i in 1:countY){\n\n    temp=makeEquation1(M,Y[i],stage=2,start=(i-1)*countM)\n    temp\n    sub=\"\"\n    for(j in 1:countX){\n      sub=addPlus(sub,letters[3],(i-1)*countX+j,\"*\",X[j])\n    }\n    temp=addPlus(temp,sub)\n    equation=addLine(equation,temp)\n  }\n  equation\n}\n\n#' Make mediation equations 3\n#'\n#' @param X A character vectors indicating independent variables\n#' @param M A character vectors indicating mediators\n#' @param Y A character vectors indicating dependent variables\n#' @param add2ndMediation whether or not make a 2nd mediation equation\nmakeEquation3=function(X,M,Y,add2ndMediation=TRUE){\n  (countX=length(X))\n  (countM=length(M))\n  (countY=length(Y))\n\n  equation=\"\"\n  ind=c()\n  for(k in 1:countY){\n    for(i in 1:countX) {\n      for(j in 1:countM) {\n\n        noA=(i-1)*countM+j\n        no=noA+(k-1)*countX*countM\n        b=((noA-1)%/%countX)+1+(k-1)*countM\n       #temp=paste0(\"ind\",no,\":=a\",noA,\"*b\",b)\n       #equation=addLine(equation,temp)\n        ind=c(ind,paste0(\"a\",noA,\"*b\",b))\n        temp=paste0(\"ind\",length(ind),\":=\",ind[length(ind)])\n        equation=addLine(equation,temp)\n      }\n    }\n  }\n  secondInd=c()\n  if(add2ndMediation &(countM>1)){\n    for(k in 1:countY){\n      for(j in 2:countM){\n        equationa=\"\"\n        for(i in 1:countX){\n          start=(j-2)*countX\n          tempa=paste0(\"a\",start+i,\"*d\",j-1,\"*b\",j+(k-1)*countM)\n          equationa=addPlus(equationa,tempa)\n        }\n        #temp=paste0(\"secondInd\",(j-1)+(k-1)*(countM-1),\":=\",equationa)\n        secondInd=c(secondInd,equationa)\n        temp=paste0(\"secondInd\",length(secondInd),\":=\",secondInd[length(secondInd)])\n        equation=addLine(equation,temp)\n      }\n    }\n  }\n  thirdInd=c()\n  if(add2ndMediation &(countM>2)){\n    for(k in 1:countY){\n      for(j in 3:countM){\n        equationa=\"\"\n        for(i in 1:countX){\n          start=(j-3)*countX\n          tempa=paste0(\"a\",start+i,\"*d\",j-2,\"*d\",j-1,\"*b\",j+(k-1)*countM)\n          equationa=addPlus(equationa,tempa)\n        }\n        #temp=paste0(\"thirdInd\",j-2,\":=\",equationa)\n        #temp=paste0(\"thirdInd\",(j-2)+(k-1)*(countM-2),\":=\",equationa)\n        thirdInd=c(thirdInd,equationa)\n        temp=paste0(\"thirdInd\",length(thirdInd),\":=\",thirdInd[length(thirdInd)])\n        equation=addLine(equation,temp)\n      }\n    }\n  }\n\n  ## total effect\n  total=c()\n\n  for(k in 1:countY){\n       # direct effect\n       direct=paste0(\"c\",seq(1:countX)+(k-1)*countX)\n       Effect=Reduce(addPlus,direct)\n       # indirect effect\n      if(countM>=1){\n       start=1+(k-1)*length(ind)/countY\n       end=start+length(ind)/countY-1\n       indirectEffect=Reduce(addPlus,ind[start:end])\n       Effect=addPlus(Effect,indirectEffect)\n      }\n       # secondIndirect\n       if(countM>=2){\n       start=1+(k-1)*length(secondInd)/countY\n       end=start+length(secondInd)/countY-1\n       secondIndEffect=Reduce(addPlus,secondInd[start:end])\n       Effect=addPlus(Effect,secondIndEffect)\n       }\n       # thirdIndirect\n       if(countM>=3){\n       start=1+(k-1)*length(thirdInd)/countY\n       end=start+length(thirdInd)/countY-1\n       thirdIndEffect=Reduce(addPlus,thirdInd[start:end])\n       Effect=addPlus(Effect,thirdIndEffect)\n\n       }\n       temp=paste0(\"total\",k,\":=\",Effect)\n       equation=addLine(equation,temp)\n\n  }\n\n\n  equation\n}\n\n\n#' Make mediation equations 3\n#'\n#' @param X A character vectors indicating independent variables\n#' @param M A character vectors indicating mediators\n#' @param Y A character vectors indicating dependent variables\n#' @param add2ndMediation whether or not make a 2nd mediation equation\n#'\n#' @export\nmakeEquation=function(X,M,Y,add2ndMediation=TRUE){\n    (countX=length(X))\n    (countM=length(M))\n    (countY=length(Y))\n    if(countX*countM*countY==0) {\n      equation=\" # You need at least one dependent variable(s),\\n#one mediation variable(s) and one independent variable(s).\"\n    } else{\n  equation=paste0(\"# Mediation Effect\\n\",makeEquation2(X,M,Y))\n  equation=addLine(equation,makeEquation1(X,M,add2ndMediation=add2ndMediation))\n  equation=addLine(equation,makeEquation3(X,M,Y,add2ndMediation=add2ndMediation))\n    }\n  equation\n}\n\n\n# makeDf=function(X,M=NULL,Y,maxx=30,maxy=30){\n#\n#    countX=length(X)\n#    mediation<-0\n#    if(!is.null(M)) {\n#       mediation<-1\n#       countM=length(M)\n#    }\n#    countY=length(Y)\n#\n#    height=3\n#    width=5\n#\n#    x<-y<-text<-group<-c()\n#    for(i in 1:countX){\n#       x<-c(x,ifelse(mediation==1,5,10))\n#       starty=ifelse(countX>2,20,ifelse(countX==2,20,15))\n#       stepy=ifelse(countX>1,(maxy-(maxy-starty)*2)/(countX-1),0)\n#       y<-c(y,starty-stepy*(i-1))\n#       text<-c(text,X[i])\n#       group<-c(group,\"X\")\n#    }\n#    if(mediation==1) for(i in 1:countM){\n#      x<-c(x,maxx*3/7)\n#      starty=maxy-3\n#      stepy=ifelse(countM>1,(maxy-(maxy-starty)*2)/(countM-1),0)\n#      y<-c(y,starty-stepy*(i-1))\n#      text<-c(text,M[i])\n#      group<-c(group,\"M\")\n#    }\n#    for(i in 1:countY){\n#      x<-c(x,ifelse(mediation==1,maxx-5,maxx-10))\n#      starty=ifelse(countY>2,22,ifelse(countY==2,22,15))\n#      stepy=ifelse(countY>1,(maxy-(maxy-starty)*2)/(countY-1),0)\n#      y<-c(y,starty-stepy*(i-1))\n#      text<-c(text,Y[i])\n#      group<-c(group,\"Y\")\n#    }\n#    df=data.frame(x,y,text,group)\n#    df\n# }\n#\n#\n# makeDf2=function(df){\n#   dfX=df[df$group==\"X\",]\n#   dfM=df[df$group==\"M\",]\n#   dfY=df[df$group==\"Y\",]\n#\n#   countX=nrow(dfX)\n#   countM=nrow(dfM)\n#   countY=nrow(dfY)\n#\n#   height=3\n#   width=5\n#   x<-y<-xend<-yend<-group<-id<-c()\n#   if(countM>=1){\n#\n#         for(j in 1:countY){\n#           for(i in 1:countM){\n#             x<-c(x,dfM$x[i]+width/2)\n#             y=c(y,dfM$y[i])\n#             xend=c(xend,dfY$x[j]-width/2)\n#             yend=c(yend,dfY$y[j])\n#             group<-c(group,1)\n#             id=c(id,paste0(\"b\",(j-1)*countM+i))\n#             cat(\"M=\",i,\",Y=\",j,\",b=\",(j-1)*countM+i,\"\\n\")\n#           }\n#         }\n#     for(i in 1:countM){\n#         if(i<countM){\n#\n#           x<-c(x,dfM$x[i])\n#           y=c(y,dfM$y[i]-height/2)\n#           xend=c(xend,dfM$x[i+1])\n#           yend=c(yend,dfM$y[i+1]+height/2)\n#           group<-c(group,1)\n#           id=c(id,paste0(\"d\",i))\n#         }\n#     }\n#\n#   }\n#\n#     if(countM>=1) {\n#        for(j in 1:countM){\n#          for(i in 1:countX){\n#            x<-c(x,dfX$x[i]+width/2)\n#            y=c(y,dfX$y[i])\n#            xend=c(xend,dfM$x[j]-width/2)\n#            yend=c(yend,dfM$y[j])\n#            group<-c(group,1)\n#            id=c(id,paste0(\"a\",(j-1)*countX+i))\n#          }\n#        }\n#     }\n#     for(k in 1:countY){\n#       for(i in 1:countX){\n#       x<-c(x,dfX$x[i]+width/2)\n#       y=c(y,dfX$y[i])\n#       xend=c(xend,dfY$x[k]-width/2)\n#       yend=c(yend,dfY$y[k])\n#       group<-c(group,2)\n#       id=c(id,paste0(\"c\",(k-1)*countX+i))\n#       }\n#     }\n#\n#   resultdf=data.frame(x,y,xend,yend,group,id)\n#   resultdf\n# }\n\n\n# plotXMY=function(X,M,Y){\n#   df=makeDf(X,M,Y)\n#   df\n#   df2=makeDf2(df)\n#   df2\n#\n#   height=3\n#   width=5\n#   p<-ggplot(data=df,aes(x=x,y=y))+\n#     xlim(0,30)+ylim(0,30)+\n#     geom_rect(aes(fill=group),xmin=df$x-width/2,xmax=df$x+width/2,\n#               ymin=df$y-height/2,ymax=df$y+height/2,color=\"black\",alpha=0.5)+\n#     geom_text(aes(label=text),size=7)\n#\n#   p<-p+geom_segment(data=df2,aes(x=x,y=y,xend=xend,yend=yend),\n#                     arrow=arrow(angle=15,length=unit(0.2,\"cm\"),type=\"closed\"))\n#   p<-p+geom_label(data=df2,aes(x=(x+xend)/2,y=(y+yend)/2,label=id))\n#   p<-p+theme_clean()+ theme(legend.position=\"none\")\n#   p\n# }\n#\n",
    "created" : 1482890053338.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4139462641",
    "id" : "B5EF46E6",
    "lastKnownWriteTime" : 1483056887,
    "last_content_update" : 1483056887252,
    "path" : "~/ownCloud/Documents/semMediation/R/makeEquation.R",
    "project_path" : "R/makeEquation.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}