{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Package semMediation\"\nauthor: \"Keon-Woong Moon\"\ndate: \"2016-08-07\"\noutput: rmarkdown::html_vignette\nvignette: >\n  %\\VignetteIndexEntry{Vignette Title}\n  %\\VignetteEngine{knitr::rmarkdown}\n  %\\VignetteEncoding{UTF-8}\n---\n\nPackage semMediation is an extension of package lavaan. The main functions of package semMediation are as follows:\n\n1. makeEquation() : support function to make a mediation equations easily for lavaan.\n2. mediationPlot() : visualize the mediation effects\n\n## Installation\n\nYou can install `semMediation` package via github.\n\n\n```{r,eval=FALSE}\ninstall.packages(\"devtools\")\ndevtools::install_github(\"cardiomoon/semMediation\")\n```\n\n## makeEquation()\n\nConsider a classical mediation setup with five variables: Y is the dependent variable, X1 and X2 are the predictors, and M1 and M2 are mediators. For illustration, we create a toy dataset containing these five variables, and fit a path analysis model that includes the direct effect of X on Y and the indirect effect of X on Y via M1 or M2 and second indirect effect via M1 and M2.\n\n\n```{r,comment=NA}\nset.seed(1234)\nX1 <- rnorm(100)\nX2 <- c(rnorm(50),rnorm(50))\nM1 <- 0.5*X1 + 0.5*X2 +rnorm(100)\nM2 <-0.6*X1 +0.4*X2+rnorm(100)\nY <- 0.3*M1 + 0.4*M2 + rnorm(100)\n\ndata <- data.frame(X1 = X1, X2 = X2, Y = Y, M1 = M1, M2 = M2)\nstr(data)\n```\n\n\nTo make a mediatino equation, you can use makeEquation() function.\n\n\n```{r,comment=NA,message=FALSE}\nrequire(lavaan)\nrequire(semPlot)\nrequire(semMediation)\nrequire(ggplot2)\nmodel=makeEquation(X=c(\"X1\",\"X2\"),M=c(\"M1\",\"M2\"),Y=\"Y\")\ncat(model)\nfit=sem(model,data=data)\nsummary(fit)\n```\n\n\nTo visualize model, you can use semPaths() function from semPlot package. But, semPaths() function is inappropriate for models with two or more mediators.\n\n\n```{r,fig.width=9,fig.height=7}\n#par(family=\"NanumGothic\")\nsemPaths(fit,rotation=2,whatLabels = \"std\")\n```\n\nmediationPlot() can visualize models with multiple mediators, multiple independent variables and/or multiple dependent variables.\n\n\n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit)\n```\n\nYou can show standardized parameter estimates(default) or parameter estimates(est), or names(name) by settting the parameter \"whatLabels\".\n\n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit,whatLabels = \"name\")\nmediationPlot(fit,whatLabels = \"est\")\n```\n\nYou can visualize indirect effects of this model. \n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit,regression=FALSE,residuals=FALSE,indirect=TRUE)\n```\n\nYou can also visualize secondary indirect effect of this model. \n\n\n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit,regression=FALSE,residuals=FALSE,secondIndirect=TRUE)\n```\n\n## Example 1\n\n```{r,fig.width=9,fig.height=7}\nmodel <- '\n   # latent variables\n     ind60 =~ x1 + x2 + x3\n     dem60 =~ y1 + y2 + y3 + y4\n     dem65 =~ y5 + y6 + y7 + y8\n   # regressions\n     dem60 ~ ind60\n     dem65 ~ ind60 + dem60\n'\nfit <- sem(model,\n           data=PoliticalDemocracy)\nsemPaths(fit,rotation=2,whatLabels = \"std\",residuals=FALSE,groups=\"manlat\",pastel=TRUE)\nmediationPlot(fit,residuals=FALSE)\n```\n## Example 2 \n",
    "created" : 1482989590604.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1931105486",
    "id" : "1CA31704",
    "lastKnownWriteTime" : 1483077326,
    "last_content_update" : 1483077326691,
    "path" : "~/ownCloud/Documents/semMediation/vignettes/semMediation.Rmd",
    "project_path" : "vignettes/semMediation.Rmd",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}