{
    "collab_server" : "",
    "contents" : "require(semMediation)\nrequire(lavaan)\nrequire(ggplot2)\nrequire(semPlot)\n\nmodel='\nknowledge =~ general+symptoms+treatmt\nempathy =~ cognitiv+emotion+disposit+attitude\nintervention =~ classrm+instruct\n'\n\nmediationModel=makeEquation(X=\"knowledge\",M=\"empathy\",Y=\"intervention\")\nmodel=paste0(model,mediationModel)\ncat(model)\nlength(ADHD)\nfit=sem(model,data=ADHD)\n\nmediationPlot(fit,base_size = 3)\nestimatesTable(fit)\ndf2Flextable(estimatesTable(fit))\n\nsummary(fit,standardized= TRUE ,ci=TRUE,fit.measures= TRUE ,rsquare= TRUE ,modindices= FALSE)\nsummary(fit,standardized= TRUE ,ci=TRUE,fit.measures= TRUE)\n\nstandardizedSolution(fit)\n\nfitMeasures(fit)\nnames(fitMeasures(fit))\nfitMeasures(fit,\"bic\")\n\nparameterEstimates(fit,standardized=TRUE,ci=TRUE)\nparameterEstimates(fit)\n\ninspect(fit,\"partable\")\nparTable(fit)\n\nfitted(fit)\n\nsummary(fit,modindices= TRUE)\nmodindices(fit)\n\nresid(fit,type=\"standardized\")\n\n\npsych::alpha(ADHD[4:12])\n\n\nmeasuredVar=function(fit){\n    res<-fit2df(fit)\n    result=res[res$latent==FALSE,]$text\n    result\n}\nmeasuredVar(fit)\n\ndata=ADHD[measuredVar(fit)]\nrequire(ggiraphExtra)\nrequire(mycor)\nggCor(data,label=2)+scale_y_discrete(limits=rev(measuredVar(fit)))+\n    scale_x_discrete(limits=measuredVar(fit))\n\nfit\n(T.orig<-fitMeasures(fit,\"chisq\"))\nbootfit=bootstrapLavaan(fit,R=1000)\n(pvalue.boot <- length(which(bootfit > T.orig))/length(bootfit))\n\n\ncovar=FALSE;ci=TRUE;standardized=TRUE\nestimatesTable=function(fit,covar=FALSE,ci=FALSE,standardized=TRUE,digits=2){\n    result=parameterEstimates(fit,ci=ci,standardized=standardized)\n    include=c(\"=~\",\"~\")\n    if(covar) include=c(include,\"~~\")\n    result=result[result$op %in% include,]\n    result=result[-c(2,4)]\n    no=ncol(result)\n    result=result[-c(no-2,no)]\n    result\n    if(ci){\n        result$est=paste0(round(result$est,digits),\"(\",round(result$ci.lower,digits),\"-\",round(result$ci.upper,digits),\")\")\n        no=ncol(result)\n        result=result[-c(no-1,no-2)]\n    }\n\n    result\n    result$se=round(result$se,2)\n    result$z=round(result$z,2)\n    result$std.all=round(result$std.all,2)\n    result$pvalue=convertPvalue(result$pvalue)\n    colnames(result)=c(\"Variables\",\"Predictors\",\"B\",\"SE\",\"z\",\"pvalue\",\"Î²\")\n    result[is.na(result)]=\"\"\n    result\n}\n\nconvertPvalue=function(x){\n    x=sprintf(\"%0.3f\",x)\n    x[x==\"NA\"]=\"\"\n    x[x==\"0.000\"]=\"<0.001\"\n    x\n}\n\nestimatesTable(fit)\n",
    "created" : 1483257996201.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3160782333",
    "id" : "9FAFC55D",
    "lastKnownWriteTime" : 1483279457,
    "last_content_update" : 1483279457957,
    "path" : "~/ownCloud/Documents/semTest/test.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}