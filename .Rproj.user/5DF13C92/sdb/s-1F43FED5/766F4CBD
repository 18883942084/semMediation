{
    "collab_server" : "",
    "contents" : "#'Add a line to the semMediation plot\n#'@param x1 The x coordinate of start point\n#'@param y1 The y coordinate of start point\n#'@param x2 The x coordinate of end point\n#'@param y2 The y coordinate of end point\n#'@param height A number indicating height of the rectangle\n#'@param width A number indicating width of the rectangle\n#'@param start The start geom. Either \"rect\" or \"ellipse\"\n#'@param end The end geom. Either \"rect\" or \"ellipse\"\n#'@param linetype The linetype passed to geom_segment()\n#'@param size the size of geom_segment()\n#'@param colour the colour of geom_segment()\n#'@param ... Other arguments passed on to geom_segment()\n#'\n#'@importFrom grid arrow unit\naddline=function(x1=0,y1=0,x2=10,y2=10,height=3,width=5,start=\"ellipse\",end=\"rect\",linetype=\"solid\",size=0.2,colour=\"black\",...){\n\n      # x1=20;y1=26;x2=50;y2=25;start=\"rect\";end=\"rect\";height=5;width=5\n      # linetype=\"solid\";size=0.2;colour=\"black\"\n    # print(x1)\n    # print(y1)\n    # print(x2)\n    # print(y2)\n    # print(start)\n    # print(end)\n    (xend=get_endx(x1,y1,x2,y2,height=height,width=width,end=end))\n    (xstart=get_startx(x1,y1,x2,y2,height=height,width=width,start=start))\n\n    if(x1==x2){\n        ystart=y1+ifelse(y1<y2,1,-1)*height/2\n        yend=y2-ifelse(y1<y2,1,-1)*height/2\n    } else{\n        fun=function(x) (y2-y1)*(x-x1)/(x2-x1)+y1\n        (yend=fun(xend))\n        (ystart=fun(xstart))\n    }\n\n\n    ggplot(data=data.frame(x=c(-10,10)),aes_string(\"x\"))+\n        add_node(x1,y1,height=height,width=width,geom=start)+\n        add_node(x2,y2,height=height,width=width,geom=end)+\n        # stat_function(fun=fun1)+\n        # stat_function(fun=fun2)+\n        # stat_function(fun=g,colour=\"red\")+\n        xlim(c(min(x1,x2)-10,max(x1,x2)+10))+ylim(c(min(y1,y2)-10,max(y1,y2)+10))+\n        geom_segment(x=xstart,y=ystart,xend=xend,yend=yend,arrow=arrow(angle=20,length=unit(0.3,\"cm\"),type=\"closed\"))\n\n\n    # (yend=get_endy(x1,y1,x2,y2,height=height,width=width,end=end))\n    # (ystart=get_starty(x1,y1,x2,y2,height=height,width=width,start=start))\n\n    # p+geom_segment(x=xstart,y=ystart,xend=xend,yend=yend,arrow=arrow(angle=20,length=unit(0.3,\"cm\"),type=\"closed\"),\n    #              linetype=linetype,size=size,colour=colour)\n   # if(y1!=y2) {\n        geom_segment(x=xstart,y=ystart,xend=xend,yend=yend,arrow=arrow(angle=20,length=unit(0.3,\"cm\"),type=\"closed\"),\n                     linetype=linetype,size=size,colour=colour,...)\n    # } else{\n    #     geom_curve(x=xstart,y=ystart,xend=xend,yend=yend,arrow=arrow(angle=20,length=unit(0.3,\"cm\"),type=\"closed\"),\n    #                linetype=linetype,curvature=0.1,size=size,colour=colour,...)\n    #     }\n\n}\n\n#'Add a label to the semMediation plot\n#'@param x1 The x coordinate of start point\n#'@param y1 The y coordinate of start point\n#'@param x2 The x coordinate of end point\n#'@param y2 The y coordinate of end point\n#'@param height A number indicating height of the rectangle\n#'@param width A number indicating width of the rectangle\n#'@param start The start geom. Either \"rect\" or \"ellipse\"\n#'@param end The end geom. Either \"rect\" or \"ellipse\"\n#'@param label The label passed on to geom_label()\n#'@param useLabel Whether use geom_label instead of geom_label. Default value is FALSE.\n#'@param ... Other arguments passed on to geom_label()\naddlabel=function(x1=0,y1=0,x2=10,y2=10,height=3,width=5,start=\"ellipse\",end=\"rect\",label=label,useLabel,...){\n\n    xend=get_endx(x1,y1,x2,y2,height=height,width=width,end=end)\n    xstart=get_startx(x1,y1,x2,y2,height=height,width=width,start=start)\n    if(x1==x2){\n        ystart=y1+ifelse(y1<y2,1,-1)*height/2\n        yend=y2-ifelse(y1<y2,1,-1)*height/2\n    } else{\n        fun=function(x) (y2-y1)*(x-x1)/(x2-x1)+y1\n        yend=fun(xend)\n        ystart=fun(xstart)\n    }\n    x=(xstart+xend)/2\n    y=(ystart+yend)/2\n\n    # if(y1==y2){\n    #     if(useLabel) geom_label(x=x,y=y,label=label,vjust=1.2,...)\n    #     else geom_label(x=x,y=y,label=label,label.size=0,vjust=1.2,...)\n    # } else\n\n    if(x1==x2){\n        if(useLabel) geom_label(x=x,y=y,label=label,vjust=-1.5,...)\n        else geom_label(x=x,y=y,label=label,label.size=0,vjust=-1.5,...)\n    } else{\n        if(useLabel) geom_label(x=x,y=y,label=label,...)\n        else geom_label(x=x,y=y,label=label,label.size=0,...)\n    }\n\n\n    #stat_function(fun=fun,xlim=c(x1,xend))\n\n}\n\n\n\n#'Get end x  position\n#'@param x1 The x coordinate of start point\n#'@param y1 The y coordinate of start point\n#'@param x2 The x coordinate of end point\n#'@param y2 The y coordinate of end point\n#'@param height A number indicating height of the rectangle\n#'@param width A number indicating width of the rectangle\n#'@param end The end geom. Either \"rect\" or \"ellipse\"\nget_endx=function(x1,y1,x2,y2,height,width,end=\"rect\"){\n    # x1=0;y1=0;x2=-30;y2=10;width=5;height=3;start=\"ellipse\";end=\"ellipse\"\n    #x1=20;y1=26;x2=50;y2=25;width=5;height=5;start=\"rect\";end=\"rect\"\n\n    if(abs(y1-y2)<height){\n        if(end==\"rect\") x=x2-ifelse(x1<x2,1,-1)*width/2\n        else x=x2-ifelse(x1<x2,1,-1)*width*4/5\n\n    } else if(x1==x2){\n        x=x1\n    } else{\n    fun1=function(x) (y2-y1)*(x-x1)/(x2-x1)+y1\n\n    if(end==\"rect\"){\n        if(y2>y1){\n            fun2=function(x) y2-height/2\n        } else {\n            fun2=function(x) y2+height/2\n        }\n        g=function(x) fun1(x)-fun2(x)\n\n        (x=uniroot(g,c(x1,x2))$root)\n        if(x< (x2-width/2)) {\n            x=x2-width/2\n        } else if(x > (x2+width/2)) {\n            x=x2+width/2\n        }\n\n    } else {\n        if(y2>y1){\n            fun2=function(x) y2-sqrt((1-(x-x2)^2/(width*4/5)^2)*(height/2)^2)\n\n        } else {\n            fun2=function(x) y2+sqrt((1-(x-x2)^2/(width*4/5)^2)*(height/2)^2)\n\n        }\n        g=function(x) fun1(x)-fun2(x)\n\n        # ggplot(data=data.frame(x=c(-10,10)),aes(x))+\n        #     add_ellipse(x1,y1,height=height,width=width)+\n        #     add_ellipse(x2,y2,height=height,width=width)+\n        #     stat_function(fun=fun1)+\n        #     stat_function(fun=fun2,colour=\"blue\")+\n        #     stat_function(fun=g,colour=\"red\")\n\n        if(x2>x1) {\n            (x=uniroot(g,c(x2,x2-width*4/5))$root)\n        } else {\n            (x=uniroot(g,c(x2,x2+width*4/5))$root)\n        }\n\n    }\n    }\n    x\n}\n\n#'Get start x  position\n#'@param x1 The x coordinate of start point\n#'@param y1 The y coordinate of start point\n#'@param x2 The x coordinate of end point\n#'@param y2 The y coordinate of end point\n#'@param height A number indicating height of the rectangle\n#'@param width A number indicating width of the rectangle\n#'@param start The start geom. Either \"rect\" or \"ellipse\"\n#'\n#'@importFrom stats uniroot\nget_startx=function(x1,y1,x2,y2,height,width,start=\"rect\"){\n\n    #  x1=35;y1=31.5;x2=50;y2=15;start=\"rect\";height=5;width=7\n    if(abs(y1-y2) < height){\n        if(start==\"rect\") x=x1+ifelse(x1<x2,1,-1)*width/2\n        else x=x1+ifelse(x1<x2,1,-1)*width*4/5\n    } else if(x1==x2){\n        x=x1\n    } else{\n\n        fun1=function(x) (y2-y1)*(x-x1)/(x2-x1)+y1\n\n        if(start==\"rect\"){\n            if(y2>y1){\n                fun2=function(x) y1+height/2\n            } else {\n                fun2=function(x) y1-height/2\n            }\n            g=function(x) fun1(x)-fun2(x)\n\n            # ggplot(data=data.frame(x=c(-10,10)),aes(x))+\n            #     add_ellipse(x1,y1,height=height,width=width)+\n            #     add_ellipse(x2,y2,height=height,width=width)+\n            #     stat_function(fun=fun1)+\n            #     stat_function(fun=fun2)+\n            #     stat_function(fun=g,colour=\"red\")\n\n            if(x2>x1) {\n                (x=uniroot(g,c(x1,x2))$root)\n            } else {\n                (x=uniroot(g,c(x2,x1))$root)\n            }\n            if(x>x1+width/2) x=x1+width/2\n            if(x<x1-width/2) x=x1-width/2\n        } else {\n            if(y2>y1){\n                fun2=function(x) y1+sqrt((1-(x-x1)^2/(width*4/5)^2)*(height/2)^2)\n            } else {\n                fun2=function(x) y1-sqrt((1-(x-x1)^2/(width*4/5)^2)*(height/2)^2)\n            }\n            g=function(x) fun1(x)-fun2(x)\n\n            # ggplot(data=data.frame(x=c(-10,10)),aes(x))+\n            #     add_ellipse(x1,y1,height=height,width=width)+\n            #     add_ellipse(x2,y2,height=height,width=width)+\n            #     stat_function(fun=fun1)+\n            #     stat_function(fun=fun2)+\n            #     stat_function(fun=g,colour=\"red\")\n\n            if(x2>x1) {\n                (x=uniroot(g,c(x1,x1+width*4/5))$root)\n            } else {\n                (x=uniroot(g,c(x1-width*4/5,x1))$root)\n            }\n        }\n\n    }\n\n\n    x\n}\n\nadd_node=function(x1,y1,height=5,width=5,geom=\"rect\"){\n    if(geom==\"rect\") add_rect(x1,y1,height,width)\n    else add_ellipse(x1,y1,height=height,width=width)\n}\n\nadd_rect=function(x1,y1,height=5,width=5){\n    x=x1-width/2\n    xend=x1+width/2\n    y=y1-height/2\n    yend=y1+height/2\n\n    geom_rect(xmin=x,xmax=xend,ymin=y,ymax=yend,fill=NA,colour=\"black\")\n}\n\n\n",
    "created" : 1482926508515.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "661385937",
    "id" : "766F4CBD",
    "lastKnownWriteTime" : 1483278621,
    "last_content_update" : 1483278621791,
    "path" : "~/ownCloud/Documents/semMediation/R/semPlot1.R",
    "project_path" : "R/semPlot1.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}