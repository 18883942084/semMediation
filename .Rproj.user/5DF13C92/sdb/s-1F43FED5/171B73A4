{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Package semMediation\"\nauthor: \"Keon-Woong Moon\"\ndate: \"2016-08-07\"\noutput: rmarkdown::html_vignette\nvignette: >\n  %\\VignetteIndexEntry{Vignette Title}\n  %\\VignetteEngine{knitr::rmarkdown}\n  %\\VignetteEncoding{UTF-8}\n---\n\nPackage semMediation is an extension of package lavaan. The main functions of package semMediation are as follows:\n\n1. makeEquation() : support function to make a mediation equations easily for lavaan.\n2. mediationPlot() : visualize the mediation effects\n\n## Installation\n\nYou can install `semMediation` package via github.\n\n\n```{r,eval=FALSE}\ninstall.packages(\"devtools\")\ndevtools::install_github(\"cardiomoon/semMediation\")\n```\n\n## makeEquation()\n\nConsider a classical mediation setup with four variables: Y1 is the dependent variable, X1 is the predictor and M1 and M2 are mediators. For illustration, we create a toy dataset containing these variables, and fit a path analysis model that includes the direct effect of X1 on Y1 and the indirect effect of X1 on Y1 via M1 or M2 and second indirect effect via M1 and M2.\n\n\n```{r,comment=NA}\nset.seed(1234)\nX1 <- rnorm(100)\nX2 <- c(rnorm(50),rnorm(50))\nM1 <- 0.5*X1 + 0.5*X2 +rnorm(100)\nM2 <-0.6*X1 +0.4*X2+rnorm(100)\nY1 <- 0.3*M1 + 0.4*M2 + rnorm(100)\nY2 <- 0.1*M1 + 0.5*M2 + rnorm(100)\n\ndata <- data.frame(X1 = X1, X2 = X2, Y1 = Y1, Y2 = Y2, M1 = M1, M2 = M2)\nstr(data)\n```\n\n\nTo make a mediatino equation, you can use makeEquation() function.\n\n\n```{r,comment=NA,message=FALSE}\nrequire(lavaan)\nrequire(semPlot)\nrequire(semMediation)\nrequire(ggplot2)\n\nmodel=makeEquation(X=\"X1\",M=c(\"M1\",\"M2\"),Y=\"Y1\")\ncat(model)\nfit=sem(model,data=data)\nsummary(fit)\n```\n\n\nTo visualize model, you can use semPaths() function from semPlot package. But, semPaths() function is inappropriate for models with two or more mediators.\n\n\n```{r,fig.width=9,fig.height=7}\n#par(family=\"NanumGothic\")\nsemPaths(fit,rotation=2,whatLabels = \"std\")\n```\n\nmediationPlot() can visualize models with multiple mediators, multiple independent variables and/or multiple dependent variables.\n\n\n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit)\n```\n\nYou can show standardized parameter estimates(default) or parameter estimates(est), or names(name) by settting the parameter \"whatLabels\".\n\n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit,whatLabels = \"name\")\nmediationPlot(fit,whatLabels = \"est\")\n```\n\nYou can visualize indirect effects of this model. \n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit,regression=FALSE,residuals=FALSE,indirect=TRUE)\n```\n\nYou can also visualize secondary indirect effect of this model. \n\n\n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit,regression=FALSE,residuals=FALSE,secondIndirect=TRUE)\n```\n\n##  More example\n\nYou can extend model with two predictors, two mediators and one response variable.\n\n```{r,comment=NA}\nmodel=makeEquation(X=c(\"X1\",\"X2\"),M=c(\"M1\",\"M2\"),Y=\"Y1\")\ncat(model)\nfit=sem(model,data=data)\n```\n```{r,fig.width=9,fig.height=7}\nsemPaths(fit)\nmediationPlot(fit)\n```\n\n##  Example 3\n\nYou can extend model with two predictors, two mediators and two response variables.\n\n```{r,comment=NA}\nmodel=makeEquation(X=c(\"X1\",\"X2\"),M=c(\"M1\",\"M2\"),Y=c(\"Y1\",\"Y2\"))\ncat(model)\nfit=sem(model,data=data)\n```\n```{r,fig.width=9,fig.height=7}\nsemPaths(fit)\nmediationPlot(fit)\n```\n\n## Example 4\n\n```{r,fig.width=9,fig.height=7}\nmodel <- '\n   # latent variables\n     ind60 =~ x1 + x2 + x3\n     dem60 =~ y1 + y2 + y3 + y4\n     dem65 =~ y5 + y6 + y7 + y8\n   # regressions\n     dem60 ~ ind60\n     dem65 ~ ind60 + dem60\n'\nfit <- sem(model,\n           data=PoliticalDemocracy)\nsemPaths(fit,rotation=2,whatLabels = \"std\",groups=\"manlat\",pastel=TRUE)\nmediationPlot(fit)\n```\n\n## Example 5 \n\nNext example is about the teacher's intervention for students with ADHD. The ADHD data contained in semMediation package is a dataset contains measures about the teacher's knowlege, empathy and intervention about attention-deficit hyperactivity disorder(ADHD).(Source:Effects of teacher's knowledge and empathy on educational intervention for ADHD: Focused on the mediating effet of empathy. J Korean Acad Psychiatr Ment Health Nurs 2013:22;45-55.)\n\n### Step 1. Define latent variables \n\nFirst of all, let's start from defining the latent variables. You can define latent variables with `=~` operator.\n\n```{r}\nmodel='\nknowledge =~ general+symptoms+treatmt\nempathy =~ cognitiv+emotion+disposit+attitude\nintervention =~ classrm+instruct\n'\n```\n\n### Step 2. Define the mediation effect\n\nYou can define mediation effects using the makeEquation() function. Here the `knowledge` is an independent variable(X) and `intervention` is a response variable(Y) and `empathy` is a mediator(M).\n\n```{r,comment=NA}\nmediationModel=makeEquation(X=\"knowledge\",M=\"empathy\",Y=\"intervention\")\ncat(mediationModel)\n```\n\nYou can add this mediation effects to the model. The final model is as follows.\n```{r,comment=NA}\nmodel=paste0(model,mediationModel)\ncat(model)\n```\n\n### Step 3. Fit the model\n\nYou can fit this model by using the lavaan::sem() function.\n```{r,comment=NA}\nfit=sem(model,data=ADHD)\nsummary(fit,standardized= TRUE ,fit.measures= FALSE ,rsquare= FALSE ,modindices= FALSE )\n```\n### Step 4. Draw a plot\n\nYou can draw figure using semPlot::semPaths() function. Alternatively, you can draw a plot with semMediation::mediationPlot().  \n\n```{r,fig.width=9,fig.height=7}\nsemPaths(fit,rotation=2,whatLabels = \"std\")\n#mediationPlot(fit,whatLabels = \"name\",residuals=FALSE)\nmediationPlot(fit,whatLabels = \"std\",residuals = FALSE,base_size=3)\n```\n\n### Step 5. Draw a correlation plot\n\nYou can draw correlation plot by CorPlot function\n\n```{r,fig.width=9,fig.height=7,message=FALSE}\nrequire(mycor)\nrequire(ggplot2)\n\nCorPlot(fit)\n```\n\n### Step 6. Make a model fit measures table\n\n\nYou can make a table summarizing model fit measures.\n\n```{r}\nresult=modelFitTable(fit)\ndf2Flextable(result)\n```\n\n### Step 7. Make a estimates table \n\n```{r}\nresult=estimatesTable(fit,ci=TRUE)\ndf2Flextable(result)\n```\n\n### Step 8. Make a mediation effects  table \n```{r}\nresult=estimatesTable(fit,mediation=TRUE,ci=TRUE)\ndf2Flextable(result)\n```\n\nYou can draw direct and indirect effects.\n```{r,fig.width=9,fig.height=7}\nmediationPlot(fit,whatLabels = \"std\",residuals = FALSE,indirect=TRUE,\n              regression=TRUE,mediationOnly = TRUE)\n```\n",
    "created" : 1483106083664.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "416562813",
    "id" : "171B73A4",
    "lastKnownWriteTime" : 1483279862,
    "last_content_update" : 1483279862756,
    "path" : "~/ownCloud/Documents/semMediation/vignettes/semMediation.Rmd",
    "project_path" : "vignettes/semMediation.Rmd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}