XMstr
XMstr=stringr::str_replace_all(XMstr,":","*")
XMstr
strGrouping(XMstr,X)
strGrouping(XMstr,X)$yes
XMstr=stringr::str_replace_all(XMstr,":","*")
strGrouping(XMstr,X)$yes
ind1=strGrouping(XMstr,X)$yes
ind1
ind2=MYstr
ind2
XYstr
strGrouping(XYstr,X)$yes
XYstr
XYstr=stringr::str_replace_all(XYstr,":","*")
XYstr
strGrouping(XYstr,X)
strGrouping(XYstr,X)$yes
direct=strGrouping(XYstr,X)$yes
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
#' @param moderator moderator
#' @param labels labels
#' @export
#' @examples
#' X="X";M="M";Y="Y"
#' moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
#' cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator))
modmedEquation=function(X="",M="",Y="",moderator=list(),labels=NULL){
(XM=moderator$name[str_detect(moderator$site,"a")])
(MY=moderator$name[str_detect(moderator$site,"b")])
(XY=moderator$name[str_detect(moderator$site,"c")])
# Regression of Moderator
XM=c(X,XM)
XMstr=interactStr(XM,prefix="a")
equation=paste(M,"~",stringr::str_flatten(XMstr,"+"),"\n")
MY=c(M,MY)
XY=c(X,XY)
MYstr=interactStr(MY,prefix="b")
MYstr
XYstr=interactStr(XY,prefix="c")
XYstr
temp=paste(Y,"~",stringr::str_flatten(XYstr,"+"),"+",
stringr::str_flatten(MYstr,"+"),"\n")
temp
equation=paste0(equation,temp)
cat(equation)
for(i in seq_along(moderator$name)){
name=moderator$name[i]
temp=paste0(name," ~ ",name,".mean*1\n")
temp=paste0(temp,name," ~~ ",name,".var*",name,"\n")
equation=paste0(equation,temp)
}
XMstr=stringr::str_replace_all(XMstr,":","*")
ind1=strGrouping(XMstr,X)$yes
ind2=MYstr
ind2
equation=paste0(equation,"indirect:=(",str_flatten(ind1,"+"), ")*(",
str_flatten(ind2,"+"),")\n")
XYstr=stringr::str_replace_all(XYstr,":","*")
XYstr
direct=strGrouping(XYstr,X)$yes
equation=paste0(equation,"direct:=",str_flatten(direct,"+"),"\n")
equation=paste0(equation,"total:=direct+indirect\n")
equation
}
X="X";M="M";Y="Y"
moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator))
X="time.c";M="pubs";Y="jobs"
moderator=list(name=c("alex.c"),site=list(c("a","c")))
model=modmedEquation(X=X,M=M,Y=Y,moderator=moderator)
cat(model)
cat(model)
str(Success)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.height=6,
fig.width=6
)
set.seed(42) #This makes sure that everyone gets the same numbers generated through rnorm function
a1 = -.59 #Set the path a1 strength (effect of X on M)
a1 = -.59 #Set the path a1 strength (effect of X on M)
a2 = -.17 #Set path a2 strength (effect of Z on M)
set.seed(42) #This makes sure that everyone gets the same numbers generated through rnorm function
a1 = -.59 #Set the path a1 strength (effect of X on M)
a2 = -.17 #Set path a2 strength (effect of Z on M)
a3 = .29 #Set path a3 strength (interaction between X and Z on M)
b = .59 #Set path b strength (effect of M on Y)
cdash1 = .27 #Set path c'1 strength (effect of X on Y)
cdash2 = .01 #Set path c'2 strength (effect of Z on Y)
cdash3 = -.01 #Set path c'3 strength (interaction betwee X and Z on Y)
n <- 200 #Set sample size
X <- rnorm(n, 7, 1) #IV: Time spent in grad school (M = 7, SD = 1)
Z <- rnorm(n, 5, 1) #Moderator: Time spent (hours per week) with Professor Demos in class or in office hours (M = 5, SD = 1)
M <- a1*X + a2*Z + a3*X*Z + rnorm(n, 0, .1) #Mediator: Number of publications in grad school
#The mediator variable is created as a function of the IV, moderator, and their interaction with some random noise thrown in the mix
Y <- cdash1*X + cdash2*Z + cdash3*X*Z + b*M + rnorm(n, 0, .1) #DV: Number of job offers
#Similar to the mediator, the DV is a function of the IV, moderator, their interaction, and the mediator with some random noise thrown in the mix
Success <- data.frame(jobs = Y, time = X, pubs = M, alex = Z)
Success$time.c <- scale(Success$time, center = TRUE, scale = FALSE)[,] #Scale returns a matrix so we have to make it a vector by indexing one column
Success$alex.c <- scale(Success$alex, center = TRUE, scale = FALSE)[,]
str(Success)
X="time.c";M="pubs";Y="jobs"
moderator=list(name=c("alex.c"),site=list(c("a","c")))
model=modmedEquation(X=X,M=M,Y=Y,moderator=moderator)
cat(model)
str(Success)
fit=sem(model,data=Success)
require(lavaan)
fit=sem(model,data=Success)
str(Success)
require(lavaan)
X="time.c";M="pubs";Y="jobs"
moderator=list(name=c("alex.c"),site=list(c("a","c")))
model=modmedEquation(X=X,M=M,Y=Y,moderator=moderator)
cat(model)
X="X";M="M";Y="Y"
moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator))
(XM=moderator$name[str_detect(moderator$site,"a")])
(MY=moderator$name[str_detect(moderator$site,"b")])
(XY=moderator$name[str_detect(moderator$site,"c")])
# Regression of Moderator
XM=c(X,XM)
XMstr=interactStr(XM,prefix="a")
equation=paste(M,"~",stringr::str_flatten(XMstr,"+"),"\n")
MY=c(M,MY)
XY=c(X,XY)
MYstr=interactStr(MY,prefix="b")
MYstr
XYstr=interactStr(XY,prefix="c")
XYstr
temp=paste(Y,"~",stringr::str_flatten(XYstr,"+"),"+",
stringr::str_flatten(MYstr,"+"),"\n")
temp
equation=paste0(equation,temp)
cat(equation)
for(i in seq_along(moderator$name)){
name=moderator$name[i]
temp=paste0(name," ~ ",name,".mean*1\n")
temp=paste0(temp,name," ~~ ",name,".var*",name,"\n")
equation=paste0(equation,temp)
}
XMstr=stringr::str_replace_all(XMstr,":","*")
ind1=strGrouping(XMstr,X)$yes
MYstr
MYstr=stringr::str_replace_all(MYstr,":","*")
MYstr
MYstr
ind2=strGrouping(MYstr,M)$yes
ind2
equation=paste0(equation,"indirect:=(",str_flatten(ind1,"+"), ")*(",
str_flatten(ind2,"+"),")\n")
XYstr=stringr::str_replace_all(XYstr,":","*")
XYstr
direct=strGrouping(XYstr,X)$yes
equation=paste0(equation,"direct:=",str_flatten(direct,"+"),"\n")
equation=paste0(equation,"total:=direct+indirect\n")
equation
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
#' @param moderator moderator
#' @param labels labels
#' @export
#' @examples
#' X="X";M="M";Y="Y"
#' moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
#' cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator))
modmedEquation=function(X="",M="",Y="",moderator=list(),labels=NULL){
(XM=moderator$name[str_detect(moderator$site,"a")])
(MY=moderator$name[str_detect(moderator$site,"b")])
(XY=moderator$name[str_detect(moderator$site,"c")])
# Regression of Moderator
XM=c(X,XM)
XMstr=interactStr(XM,prefix="a")
equation=paste(M,"~",stringr::str_flatten(XMstr,"+"),"\n")
MY=c(M,MY)
XY=c(X,XY)
MYstr=interactStr(MY,prefix="b")
MYstr
XYstr=interactStr(XY,prefix="c")
XYstr
temp=paste(Y,"~",stringr::str_flatten(XYstr,"+"),"+",
stringr::str_flatten(MYstr,"+"),"\n")
temp
equation=paste0(equation,temp)
cat(equation)
for(i in seq_along(moderator$name)){
name=moderator$name[i]
temp=paste0(name," ~ ",name,".mean*1\n")
temp=paste0(temp,name," ~~ ",name,".var*",name,"\n")
equation=paste0(equation,temp)
}
XMstr=stringr::str_replace_all(XMstr,":","*")
ind1=strGrouping(XMstr,X)$yes
MYstr=stringr::str_replace_all(MYstr,":","*")
ind2=strGrouping(MYstr,M)$yes
ind2
equation=paste0(equation,"indirect:=(",str_flatten(ind1,"+"), ")*(",
str_flatten(ind2,"+"),")\n")
XYstr=stringr::str_replace_all(XYstr,":","*")
XYstr
direct=strGrouping(XYstr,X)$yes
equation=paste0(equation,"direct:=",str_flatten(direct,"+"),"\n")
equation=paste0(equation,"total:=direct+indirect\n")
equation
}
X="X";M="M";Y="Y"
moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator))
X="time.c";M="pubs";Y="jobs"
moderator=list(name=c("alex.c"),site=list(c("a","c")))
model=modmedEquation(X=X,M=M,Y=Y,moderator=moderator)
cat(model)
str(Success)
fit=sem(model,data=Success)
cat(model)
cat(model)
X="X";M="M";Y="Y"
moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator))
X="X";M="M";Y="Y"
moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
(XM=moderator$name[str_detect(moderator$site,"a")])
(MY=moderator$name[str_detect(moderator$site,"b")])
(XY=moderator$name[str_detect(moderator$site,"c")])
# Regression of Moderator
XM=c(X,XM)
XMstr=interactStr(XM,prefix="a")
equation=paste(M,"~",stringr::str_flatten(XMstr,"+"),"\n")
MY=c(M,MY)
XY=c(X,XY)
MYstr=interactStr(MY,prefix="b")
MYstr
XYstr=interactStr(XY,prefix="c")
XYstr
temp=paste(Y,"~",stringr::str_flatten(XYstr,"+"),"+",
stringr::str_flatten(MYstr,"+"),"\n")
temp
equation=paste0(equation,temp)
cat(equation)
for(i in seq_along(moderator$name)){
name=moderator$name[i]
temp=paste0(name," ~ ",name,".mean*1\n")
temp=paste0(temp,name," ~~ ",name,".var*",name,"\n")
equation=paste0(equation,temp)
}
XMstr=stringr::str_replace_all(XMstr,":","*")
ind1=strGrouping(XMstr,X)$yes
MYstr=stringr::str_replace_all(MYstr,":","*")
ind2=strGrouping(MYstr,M)$yes
ind2
ind1
MYstr=stringr::str_replace_all(MYstr,":","*")
ind2=strGrouping(MYstr,M)$yes
ind2
ind=paste0("(",str_flatten(ind1,"+"), ")*(",str_flatten(ind2,"+"),")")
ind
XMstr=stringr::str_replace_all(XMstr,":","*")
ind1=strGrouping(XMstr,X)$yes
ind1
MYstr=stringr::str_replace_all(MYstr,":","*")
ind2=strGrouping(MYstr,M)$yes
ind2
ind=paste0("(",str_flatten(ind1,"+"), ")*(",str_flatten(ind2,"+"),")")
ind
ind.below<-ind.above<-ind
for(i in seq_along(moderator$name)){
temp=paste0("(",moderator$name[i],".mean-sqrt(",moderator$name[i],".var))")
ind.below=str_replace_all(ind.below,moderator$name[i],temp)
temp=paste0("(",moderator$name[i],".mean+sqrt(",moderator$name[i],".var))")
ind.above=str_replace_all(ind.above,moderator$name[i],temp)
}
ind
ind.below
ind.above
XYstr=stringr::str_replace_all(XYstr,":","*")
XYstr
direct=strGrouping(XYstr,X)$yes
direct
direct=strGrouping(XYstr,X)$yes
dir=paste0(str_flatten(direct,"+"))
dir
direct=strGrouping(XYstr,X)$yes
dir=paste0(str_flatten(direct,"+"))
dir.below<-dir.above<-dir
for(i in seq_along(moderator$name)){
temp=paste0("(",moderator$name[i],".mean-sqrt(",moderator$name[i],".var))")
dir.below=str_replace_all(dir.below,moderator$name[i],temp)
temp=paste0("(",moderator$name[i],".mean+sqrt(",moderator$name[i],".var))")
dir.above=str_replace_all(dir.above,moderator$name[i],temp)
}
equation=paste0(equation,"direct.SDbelow:=",dir.below,"\n")
equation=paste0(equation,"direct.SDabove:=",dir.above,"\n")
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
#' @param moderator moderator
#' @param labels labels
#' @export
#' @examples
#' X="X";M="M";Y="Y"
#' moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
#' cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator))
modmedEquation=function(X="",M="",Y="",moderator=list(),labels=NULL){
(XM=moderator$name[str_detect(moderator$site,"a")])
(MY=moderator$name[str_detect(moderator$site,"b")])
(XY=moderator$name[str_detect(moderator$site,"c")])
# Regression of Moderator
XM=c(X,XM)
XMstr=interactStr(XM,prefix="a")
equation=paste(M,"~",stringr::str_flatten(XMstr,"+"),"\n")
MY=c(M,MY)
XY=c(X,XY)
MYstr=interactStr(MY,prefix="b")
MYstr
XYstr=interactStr(XY,prefix="c")
XYstr
temp=paste(Y,"~",stringr::str_flatten(XYstr,"+"),"+",
stringr::str_flatten(MYstr,"+"),"\n")
temp
equation=paste0(equation,temp)
cat(equation)
for(i in seq_along(moderator$name)){
name=moderator$name[i]
temp=paste0(name," ~ ",name,".mean*1\n")
temp=paste0(temp,name," ~~ ",name,".var*",name,"\n")
equation=paste0(equation,temp)
}
XMstr=stringr::str_replace_all(XMstr,":","*")
ind1=strGrouping(XMstr,X)$yes
ind1
MYstr=stringr::str_replace_all(MYstr,":","*")
ind2=strGrouping(MYstr,M)$yes
ind2
ind=paste0("(",str_flatten(ind1,"+"), ")*(",str_flatten(ind2,"+"),")")
ind
ind.below<-ind.above<-ind
for(i in seq_along(moderator$name)){
temp=paste0("(",moderator$name[i],".mean-sqrt(",moderator$name[i],".var))")
ind.below=str_replace_all(ind.below,moderator$name[i],temp)
temp=paste0("(",moderator$name[i],".mean+sqrt(",moderator$name[i],".var))")
ind.above=str_replace_all(ind.above,moderator$name[i],temp)
}
ind.below
ind.above
equation=paste0(equation,"indirect.SDbelow:=",ind.below,"\n")
equation=paste0(equation,"indirect.SDabove:=",ind.above,"\n")
XYstr=stringr::str_replace_all(XYstr,":","*")
XYstr
direct=strGrouping(XYstr,X)$yes
dir=paste0(str_flatten(direct,"+"))
dir.below<-dir.above<-dir
for(i in seq_along(moderator$name)){
temp=paste0("(",moderator$name[i],".mean-sqrt(",moderator$name[i],".var))")
dir.below=str_replace_all(dir.below,moderator$name[i],temp)
temp=paste0("(",moderator$name[i],".mean+sqrt(",moderator$name[i],".var))")
dir.above=str_replace_all(dir.above,moderator$name[i],temp)
}
equation=paste0(equation,"direct.SDbelow:=",dir.below,"\n")
equation=paste0(equation,"direct.SDabove:=",dir.above,"\n")
equation=paste0(equation,"total.SDbelow := direct.SDbelow + indirect.SDbelow\n",
"total.SDabove := direct.SDabove + indirect.SDabove\n")
equation=paste0(equation,"prop.mediated.SDbelow := indirect.SDbelow / total.SDbelow\n",
"prop.mediated.SDabove := indirect.SDabove / total.SDabove\n")
equation
}
require(lavaan)
X="time.c";M="pubs";Y="jobs"
moderator=list(name=c("alex.c"),site=list(c("a","c")))
model=modmedEquation(X=X,M=M,Y=Y,moderator=moderator)
cat(model)
str(Success)
fit=sem(model,data=Success)
parameterEstimates(fit)
semDiagram(fit)
require(semMediation)
semDiagram(fit)
conceptDiagram(fit)
semDiagram(fit)
conceptDiagram(fit)
semDiagram(fit)
cat(model)
ind
ind1
ind2
ind1
temp=
ind1[-1]
ind1[-1]
str_view(ind1[-1],"$*")
temp=ind1[str_detect(ind1,"*")]
temp=ind1[str_detect(ind1,fixed("*"))]
temp
str_split(temp,"*")
str_split(temp,fixed("*"))
unlist(str_split(temp,fixed("*")))
temp=ind1[str_detect(ind1,fixed("*"))]
temp=unlist(str_split(temp,fixed("*")))
temp
temp[seq(1,length(temp),2)]
ind2
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
#' @param moderator moderator
#' @param labels labels
#' @export
#' @examples
#' X="X";M="M";Y="Y"
#' moderator=list(name=c("z1","z2"),site=list(c("a","b","c"),c("a","c")))
#' cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator))
modmedEquation=function(X="",M="",Y="",moderator=list(),labels=NULL){
(XM=moderator$name[str_detect(moderator$site,"a")])
(MY=moderator$name[str_detect(moderator$site,"b")])
(XY=moderator$name[str_detect(moderator$site,"c")])
# Regression of Moderator
XM=c(X,XM)
XMstr=interactStr(XM,prefix="a")
equation=paste(M,"~",stringr::str_flatten(XMstr,"+"),"\n")
MY=c(M,MY)
XY=c(X,XY)
MYstr=interactStr(MY,prefix="b")
MYstr
XYstr=interactStr(XY,prefix="c")
XYstr
temp=paste(Y,"~",stringr::str_flatten(XYstr,"+"),"+",
stringr::str_flatten(MYstr,"+"),"\n")
temp
equation=paste0(equation,temp)
cat(equation)
for(i in seq_along(moderator$name)){
name=moderator$name[i]
temp=paste0(name," ~ ",name,".mean*1\n")
temp=paste0(temp,name," ~~ ",name,".var*",name,"\n")
equation=paste0(equation,temp)
}
XMstr=stringr::str_replace_all(XMstr,":","*")
ind1=strGrouping(XMstr,X)$yes
ind1
MYstr=stringr::str_replace_all(MYstr,":","*")
ind2=strGrouping(MYstr,M)$yes
ind2
ind=paste0("(",str_flatten(ind1,"+"), ")*(",str_flatten(ind2,"+"),")")
ind
ind.below<-ind.above<-ind
for(i in seq_along(moderator$name)){
temp=paste0("(",moderator$name[i],".mean-sqrt(",moderator$name[i],".var))")
ind.below=str_replace_all(ind.below,moderator$name[i],temp)
temp=paste0("(",moderator$name[i],".mean+sqrt(",moderator$name[i],".var))")
ind.above=str_replace_all(ind.above,moderator$name[i],temp)
}
ind.below
ind.above
equation=paste0(equation,"indirect.SDbelow:=",ind.below,"\n")
equation=paste0(equation,"indirect.SDabove:=",ind.above,"\n")
XYstr=stringr::str_replace_all(XYstr,":","*")
XYstr
direct=strGrouping(XYstr,X)$yes
dir=paste0(str_flatten(direct,"+"))
dir.below<-dir.above<-dir
for(i in seq_along(moderator$name)){
temp=paste0("(",moderator$name[i],".mean-sqrt(",moderator$name[i],".var))")
dir.below=str_replace_all(dir.below,moderator$name[i],temp)
temp=paste0("(",moderator$name[i],".mean+sqrt(",moderator$name[i],".var))")
dir.above=str_replace_all(dir.above,moderator$name[i],temp)
}
equation=paste0(equation,"direct.SDbelow:=",dir.below,"\n")
equation=paste0(equation,"direct.SDabove:=",dir.above,"\n")
equation=paste0(equation,"total.SDbelow := direct.SDbelow + indirect.SDbelow\n",
"total.SDabove := direct.SDabove + indirect.SDabove\n")
equation=paste0(equation,"prop.mediated.SDbelow := indirect.SDbelow / total.SDbelow\n",
"prop.mediated.SDabove := indirect.SDabove / total.SDabove\n")
if(length(moderator$name)==1) {
temp=ind1[str_detect(ind1,fixed("*"))]
temp=unlist(str_split(temp,fixed("*")))
temp[seq(1,length(temp),2)]
ind2
equation=paste0(equation,"index.mod.med :=",
temp[seq(1,length(temp),2)],"*",str_flatten(ind2,"+"),"\n")
}
equation
}
X="time.c";M="pubs";Y="jobs"
moderator=list(name=c("alex.c"),site=list(c("a","c")))
model=modmedEquation(X=X,M=M,Y=Y,moderator=moderator)
cat(model)
str(Success)
library(semMediation)
X="time.c";M="pubs";Y="jobs"
moderator=list(name=c("alex.c"),site=list(c("a","c")))
model=modmedEquation(X=X,M=M,Y=Y,moderator=moderator)
cat(model)
str(Success)
fit=sem(model,data=Success)
parameterEstimates(fit)
semDiagram(fit)
conceptDiagram(fit)
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
