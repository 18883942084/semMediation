xlim(min(df2$x)-12,max(df2$x)+12)+ylim(min(df2$y)-8,max(df2$y)+8)
p
p<-p+ geom_rect(data=df3,xmin=df3$x-width/2,xmax=df3$x+width/2,
ymin=df3$y-height/2,ymax=df3$y+height/2,color="black",fill="white",alpha=0.5)
if(nrow(df4)>0){
for(i in 1:nrow(df4)) p<-p+add_ellipse(df4$x[i],df4$y[i],height=height,width=width,fill=ifelse(usecolor,"yellow","white"))
}
p<-p+  geom_text(aes_string(label="text"),size=base_size,family=base_family)
p
if(clean) {
p<-p+theme_clean(base_size=base_size,base_family=base_family)
} else  p<-p+theme_grey(base_size=base_size,base_family=base_family)
p<-p+theme(legend.position="none")
p
p2<-p
p<-p2
resMeasure=res[res$op=="=~",]
resMeasure
df2
if(nrow(resMeasure)>0){
resMeasure=mergeDataPos(resMeasure,df2,whatLabels,height=height,width=width)
resMeasure=addLinetype(resMeasure)
resMeasure
if(mode==1){
for(i in 1:nrow(resMeasure)){
p<-p+addline(x1=resMeasure$x1[i],y1=resMeasure$y1[i],x2=resMeasure$x2[i],y2=resMeasure$y2[i],
start=resMeasure$start[i],end=resMeasure$end[i],linetype=resMeasure$linetype[i],height=height,width=width)
if(whatLabels!="name")
p<-p+addlabel(x1=resMeasure$x1[i],y1=resMeasure$y1[i],x2=resMeasure$x2[i],y2=resMeasure$y2[i],
start=resMeasure$start[i],end=resMeasure$end[i],label=resMeasure$text[i],
useLabel=useLabel,size=base_size-1)
}
p
} else{
p<-p+geom_segment(data=resMeasure,aes_string(x="x",y="y",xend="xend",yend="yend"),
linetype=resMeasure$linetype,
arrow=arrow(angle=20,length=unit(0.3,"cm"),ends="first",type="closed"))
if(whatLabels!="name"){
if(useLabel) p<-p+geom_label(data=resMeasure,aes_string(x="(x+xend)/2",y="(y+yend)/2",label="text"),size=base_size-1)
else p<-p+geom_label(data=resMeasure,aes_string(x="(x+xend)/2",y="(y+yend)/2",label="text"),label.size=0,size=base_size-1)
}
}
}
p
p2<-p
p<-p2
if(regression){
resReg=res[res$op=="~",]
resReg
if(nrow(resReg)>0){
resReg=mergeDataPos(resReg,df2,whatLabels,height=height,width=width)
resReg=addLinetype(resReg)
resReg
if(mode==1){
for(i in 1:nrow(resReg)){
#if(resReg$linetype[i]=="dotted") next
#i=10
if(whatLabels=="name"){
p<-p+addline(x1=resReg$x2[i],y1=resReg$y2[i],x2=resReg$x1[i],y2=resReg$y1[i],
start=resReg$end[i],end=resReg$start[i],height=height,width=width)
} else{
p<-p+addline(x1=resReg$x2[i],y1=resReg$y2[i],x2=resReg$x1[i],y2=resReg$y1[i],
start=resReg$end[i],end=resReg$start[i],linetype=resReg$linetype[i],height=height,width=width)
}
p
}
for(i in 1:nrow(resReg)){
p<-p+addlabel(x1=resReg$x2[i],y1=resReg$y2[i],x2=resReg$x1[i],y2=resReg$y1[i],
start=resReg$end[i],end=resReg$start[i],label=resReg$text[i],
useLabel=useLabel,size=base_size-1)
}
p
} else {
p<-p+geom_segment(data=resReg[substr(resReg$label,1,1)!="c",],aes_string(x="x",y="y",xend="xend",yend="yend"),
linetype=resReg[substr(resReg$label,1,1)!="c",]$linetype,
arrow=arrow(angle=20,length=unit(0.3,"cm"),type="closed"))
p<-p+geom_curve(data=resReg[substr(resReg$label,1,1)=="c",],aes_string(x="x",y="y",xend="xend",yend="yend"),
linetype=resReg[substr(resReg$label,1,1)=="c",]$linetype,curvature = 0.1,
arrow=arrow(angle=20,length=unit(0.3,"cm"),type="closed"))
if(useLabel) {
p<-p+geom_label(data=resReg[substr(resReg$label,1,1)!="c",],aes_string(x="(x+xend)/2",y="(y+yend)/2",label="text"),size=base_size-1)
p<-p+geom_label(data=resReg[substr(resReg$label,1,1)=="c",],aes_string(x="(x+xend)/2",y="(y+yend)/2-2",label="text"),size=base_size-1)
}else {
p<-p+geom_label(data=resReg[substr(resReg$label,1,1)!="c",],aes_string(x="(x+xend)/2",y="(y+yend)/2",label="text"),label.size=0,size=base_size-1)
p<-p+geom_label(data=resReg[substr(resReg$label,1,1)=="c",],aes_string(x="(x+xend)/2",y="(y+yend)/2-2",label="text"),label.size=0,size=base_size-1)
}
p
}
}
}
p
resCor=res[res$op=="~~",]
if(!residuals) resCor=resCor[resCor$lhs!=resCor$rhs,]
residuals=FALSE
resCor=res[res$op=="~~",]
if(!residuals) resCor=resCor[resCor$lhs!=resCor$rhs,]
resCor
df2
resCor=mergeDataPos(resCor,df2,whatLabels,height=height,width=width)
resCor=addLinetype(resCor)
resCor
if(nrow(resCor[resCor$curvature==2,])>0)
p<-p+geom_curve(data=resCor[resCor$curvature==2,],aes_string(x="x",y="y",xend="xend",yend="yend"),curvature=2.5,
#linetype=resCor[resCor$curvature==2,]$linetype,
arrow=arrow(angle=20,length=unit(0.2,"cm"),ends="both",type="closed"))
if(nrow(resCor[resCor$curvature==-2,])>0)
p<-p+geom_curve(data=resCor[resCor$curvature==-2,],aes_string(x="x",y="y",xend="xend",yend="yend"),curvature=-2.5,
#linetype=resCor[resCor$curvature==-2,]$linetype,
arrow=arrow(angle=20,length=unit(0.2,"cm"),ends="both",type="closed"))
if(nrow(resCor[resCor$curvature==-0.3,])>0)
p<-p+geom_curve(data=resCor[resCor$curvature==-0.3,],aes_string(x="x",y="y",xend="xend",yend="yend"),
#linetype=resCor[resCor$curvature==-0.3,]$linetype,
curvature=-0.2,
arrow=arrow(angle=20,length=unit(0.2,"cm"),ends="both",type="closed"))
if(nrow(resCor[resCor$curvature==0.3,])>0)
p<-p+geom_curve(data=resCor[resCor$curvature==0.3,],aes_string(x="x",y="y",xend="xend",yend="yend"),
#linetype=resCor[resCor$curvature==-0.3,]$linetype,
curvature=0.2,
arrow=arrow(angle=20,length=unit(0.2,"cm"),ends="both",type="closed"))
if(whatLabels!="name"){
if(useLabel) {
#p<-p+geom_text(data=resCor[resCor$group %in% c("X","Y","H2"),],aes(x=(x+xend)/2,y=(y+yend)/2,label=label))
if(nrow(resCor[resCor$position==4,])>0)
p<-p+geom_label(data=resCor[resCor$position==4,],aes_string(x="(x+xend)/2",y="(y+yend)/2-height*3/4",label="text"),vjust=1.5)
if(nrow(resCor[resCor$position==3,])>0)
p<-p+geom_label(data=resCor[resCor$position==3,],aes_string(x="(x+xend)/2+width*1/2",y="(y+yend)/2",label="text"),hjust=-0.1)
if(nrow(resCor[resCor$position==2,])>0)
p<-p+geom_label(data=resCor[resCor$position==2,],aes_string(x="(x+xend)/2",y="(y+yend)/2+height*3/4",label="text"),vjust=-0.5)
if(nrow(resCor[resCor$position==1,])>0)
p<-p+geom_label(data=resCor[resCor$position==1,],aes_string(x="(x+xend)/2-width*1/2",y="(y+yend)/2",label="text"),hjust=1.1)
}
else {
if(nrow(resCor[resCor$position==4,])>0)
p<-p+geom_text(data=resCor[resCor$position==4,],aes_string(x="(x+xend)/2",y="(y+yend)/2-height*3/4",label="text"),vjust=1.5)
if(nrow(resCor[resCor$position==3,])>0)
p<-p+geom_text(data=resCor[resCor$position==3,],aes_string(x="(x+xend)/2+width*1/2",y="(y+yend)/2",label="text"),hjust=-0.1)
if(nrow(resCor[resCor$position==2,])>0)
p<-p+geom_text(data=resCor[resCor$position==2,],aes_string(x="(x+xend)/2",y="(y+yend)/2+height*3/4",label="text"),vjust=-0.5)
if(nrow(resCor[resCor$position==1,])>0)
p<-p+geom_text(data=resCor[resCor$position==1,],aes_string(x="(x+xend)/2-width*1/2",y="(y+yend)/2",label="text"),hjust=1.1)
}
}
if(nrow(resCor)>0){
#height=3;width=5;whatLabels="est"
resCor=mergeDataPos(resCor,df2,whatLabels,height=height,width=width)
resCor=addLinetype(resCor)
resCor
#str(resCor)
if(nrow(resCor[resCor$curvature==2,])>0)
p<-p+geom_curve(data=resCor[resCor$curvature==2,],aes_string(x="x",y="y",xend="xend",yend="yend"),curvature=2.5,
#linetype=resCor[resCor$curvature==2,]$linetype,
arrow=arrow(angle=20,length=unit(0.2,"cm"),ends="both",type="closed"))
if(nrow(resCor[resCor$curvature==-2,])>0)
p<-p+geom_curve(data=resCor[resCor$curvature==-2,],aes_string(x="x",y="y",xend="xend",yend="yend"),curvature=-2.5,
#linetype=resCor[resCor$curvature==-2,]$linetype,
arrow=arrow(angle=20,length=unit(0.2,"cm"),ends="both",type="closed"))
if(nrow(resCor[resCor$curvature==-0.3,])>0)
p<-p+geom_curve(data=resCor[resCor$curvature==-0.3,],aes_string(x="x",y="y",xend="xend",yend="yend"),
#linetype=resCor[resCor$curvature==-0.3,]$linetype,
curvature=-0.2,
arrow=arrow(angle=20,length=unit(0.2,"cm"),ends="both",type="closed"))
if(nrow(resCor[resCor$curvature==0.3,])>0)
p<-p+geom_curve(data=resCor[resCor$curvature==0.3,],aes_string(x="x",y="y",xend="xend",yend="yend"),
#linetype=resCor[resCor$curvature==-0.3,]$linetype,
curvature=0.2,
arrow=arrow(angle=20,length=unit(0.2,"cm"),ends="both",type="closed"))
if(whatLabels!="name"){
if(useLabel) {
#p<-p+geom_text(data=resCor[resCor$group %in% c("X","Y","H2"),],aes(x=(x+xend)/2,y=(y+yend)/2,label=label))
if(nrow(resCor[resCor$position==4,])>0)
p<-p+geom_label(data=resCor[resCor$position==4,],aes_string(x="(x+xend)/2",y="(y+yend)/2-height*3/4",label="text"),vjust=1.5)
if(nrow(resCor[resCor$position==3,])>0)
p<-p+geom_label(data=resCor[resCor$position==3,],aes_string(x="(x+xend)/2+width*1/2",y="(y+yend)/2",label="text"),hjust=-0.1)
if(nrow(resCor[resCor$position==2,])>0)
p<-p+geom_label(data=resCor[resCor$position==2,],aes_string(x="(x+xend)/2",y="(y+yend)/2+height*3/4",label="text"),vjust=-0.5)
if(nrow(resCor[resCor$position==1,])>0)
p<-p+geom_label(data=resCor[resCor$position==1,],aes_string(x="(x+xend)/2-width*1/2",y="(y+yend)/2",label="text"),hjust=1.1)
}
else {
if(nrow(resCor[resCor$position==4,])>0)
p<-p+geom_text(data=resCor[resCor$position==4,],aes_string(x="(x+xend)/2",y="(y+yend)/2-height*3/4",label="text"),vjust=1.5)
if(nrow(resCor[resCor$position==3,])>0)
p<-p+geom_text(data=resCor[resCor$position==3,],aes_string(x="(x+xend)/2+width*1/2",y="(y+yend)/2",label="text"),hjust=-0.1)
if(nrow(resCor[resCor$position==2,])>0)
p<-p+geom_text(data=resCor[resCor$position==2,],aes_string(x="(x+xend)/2",y="(y+yend)/2+height*3/4",label="text"),vjust=-0.5)
if(nrow(resCor[resCor$position==1,])>0)
p<-p+geom_text(data=resCor[resCor$position==1,],aes_string(x="(x+xend)/2-width*1/2",y="(y+yend)/2",label="text"),hjust=1.1)
}
}
}
p
resCor
df2
resCor=mergeDataPos(resCor,df2,whatLabels,height=height,width=width)
resCor=addLinetype(resCor)
resCor
resCor
resCor=res[res$op=="~~",]
if(!residuals) resCor=resCor[resCor$lhs!=resCor$rhs,]
resCor
df2
res<-resCor;whatLabels="est";width=5;height=3
x<-y<-xend<-yend<-label<-curvature<-group<-position1<-c()
x1<-y1<-x2<-y2<-start<-end<-c()
res
for(i in 1:nrow(res)){
tempcurvature=-0.3
tempx=df2[df2$text==res$rhs[i],]$x
tempy=df2[df2$text==res$rhs[i],]$y
tempxend=df2[df2$text==res$lhs[i],]$x
tempyend=df2[df2$text==res$lhs[i],]$y
latent=df2[df2$text==res$lhs[i],]$latent
x1=c(x1,df2[df2$text==res$lhs[i],]$x)
y1=c(y1,df2[df2$text==res$lhs[i],]$y)
x2=c(x2,df2[df2$text==res$rhs[i],]$x)
y2=c(y2,df2[df2$text==res$rhs[i],]$y)
start=c(start,ifelse(df2[df2$text==res$lhs[i],]$latent,"ellipse","rect"))
end=c(end,ifelse(df2[df2$text==res$rhs[i],]$latent,"ellipse","rect"))
## Correlation
if(res$lhs[i]==res$rhs[i]) {
margin=height/3
tempcurvature=-2
tempgroup=df2[df2$text==res$lhs[i],]$group1
(H1group=df2[(substr(df2$group1,1,1)=="H")&(df2$group3==1),]$group1)
(H2group=df2[(substr(df2$group1,1,1)=="H")&(df2$group3==2),]$group1)
(M1group=df2[(substr(df2$group1,1,1)=="M")&(df2$group3==1),]$group1)
(M2group=df2[(substr(df2$group1,1,1)=="M")&(df2$group3==2),]$group1)
if(tempgroup %in% c("0",M1group,M2group)) {
tempx=tempx-width/2-ifelse(latent,width/10,0)
tempy=tempy-height/3
tempxend=tempxend-width/2-ifelse(latent,width/10,0)
tempyend=tempyend+height/3
position=1
}
if(tempgroup %in% H1group){
tempx=tempx-margin
tempy=tempy+height/2
tempxend=tempxend+margin
tempyend=tempyend+height/2
position=2
}
if(tempgroup=="5"){
tempcurvature=2
tempx=tempx+width/2
tempy=tempy-margin
tempxend=tempxend+width/2
tempyend=tempyend+margin
position=3
}
if(tempgroup %in% c("X","Y")) {
tempcurvature=2
tempx=tempx-margin
tempy=tempy-height/2
tempxend=tempxend+margin
tempyend=tempyend-height/2
position=4
}
if(tempgroup %in% H2group) {
tempcurvature=2
tempx=tempx-margin
tempy=tempy-height/2
tempxend=tempxend+margin
tempyend=tempyend-height/2
position=4
}
} else if(res$op[i]=="=~") {
tempgroup1=df2[df2$text==res$rhs[i],]$group1
if(length(tempgroup1)>0){
if(tempgroup1=="0") tempx=tempx+width/2
(H1group=df2[(substr(df2$group1,1,1)=="H")&(df2$group3==1),]$group1)
(H2group=df2[(substr(df2$group1,1,1)=="H")&(df2$group3==2),]$group1)
(M1group=df2[(substr(df2$group1,1,1)=="M")&(df2$group3==1),]$group1)
(M2group=df2[(substr(df2$group1,1,1)=="M")&(df2$group3==2),]$group1)
if(tempgroup1 %in% H1group) tempy=tempy-height/2
if(tempgroup1 %in% H2group) tempy=tempy+height/2
if(tempgroup1=="5") tempx=tempx-width/2
}
tempgroup=df2[df2$text==res$lhs[i],]$group1
if(length(tempgroup)>0){
if(tempgroup %in% M1group) tempyend=tempyend+height/2
if(tempgroup %in% M2group) tempyend=tempyend-height/2
if(tempgroup=="Y") tempxend=tempxend+width/2+ifelse(latent,width*3/10,0)
if(tempgroup=="X") tempxend=tempxend-width/2-ifelse(latent,width*3/10,0)
}
} else if(res$op[i] %in% c("~","~~")) {
position=1
tempgroup1=df2[df2$text==res$rhs[i],]$group1
if(length(tempgroup1)>0){
(H1group=df2[(substr(df2$group1,1,1)=="H")&(df2$group3==1),]$group1)
(H2group=df2[(substr(df2$group1,1,1)=="H")&(df2$group3==2),]$group1)
(M1group=df2[(substr(df2$group1,1,1)=="M")&(df2$group3==1),]$group1)
(M2group=df2[(substr(df2$group1,1,1)=="M")&(df2$group3==2),]$group1)
latent=df2[df2$text==res$rhs[i],]$latent
if(tempgroup1=="0") tempx=tempx+width/2
if(tempgroup1 %in% H1group) tempy=tempy-height/2
if(tempgroup1 %in% H2group) tempy=tempy+height/2
if(tempgroup1=="5") tempx=tempx-width/2
if(tempgroup1 %in% M1group) tempy=tempy-height/2
if(tempgroup1 %in% M2group) tempy=tempy+height/2
if(tempgroup1=="Y") tempx=tempx-width/2-ifelse(latent,width*3/10,0)
if(tempgroup1=="X") tempx=tempx+width/2+ifelse(latent,width*3/10,0)
}
tempgroup=df2[df2$text==res$lhs[i],]$group1
if(length(tempgroup)>0){
latent=df2[df2$text==res$lhs[i],]$latent
if(tempgroup=="0") tempxend=tempxend+width/2
if(tempgroup %in% H1group) tempyend=tempyend-height/2
if(tempgroup %in% H2group) tempyend=tempyend+height/2
if(tempgroup=="5") tempxend=tempxend-width/2
if(tempgroup %in% M1group) tempyend=tempyend-height/2
if(tempgroup %in% M2group) tempyend=tempyend+height/2
if(tempgroup=="Y") {
tempxend=tempxend-width/2-ifelse(latent,width*3/10,0)
position=1
}
if(tempgroup=="X") tempxend=tempxend+width/2+ifelse(latent,width*3/10,0)
}
}
x=c(x,tempx)
y=c(y,tempy)
xend=c(xend,tempxend)
yend=c(yend,tempyend)
#df2
if(res$op[i]=="~~") {
curvature=c(curvature,tempcurvature)
group=c(group,tempgroup)
position1=c(position1,position)
}
}
res$x=x
res$y=y
res$xend=xend
res$yend=yend
res$x1=x1
res$y1=y1
res$x2=x2
res$y2=y2
res$start=start
res$end=end
if(res$op[i]=="~~") {
res$curvature=curvature
res$group=group
res$position=position1
}
if(whatLabels=="std") res$text=res[["std.all"]]
else if(whatLabels=="name") res$text=res$label
else res$text=res$est
select=((res$op=="~~")&(res$lhs!=res$rhs)&(res$group=="X"))
select
res[select,]
res[select,]
library(semMediation)
model='
knowledge =~ general+symptoms+treatmt
empathy =~ cognitiv+emotion+disposit+attitude
intervention =~ classrm+instruct
'
fit=sem(model,data=ADHD)
semPaths(fit)
mediationPlot(fit)
fit=sem(model,data=ADHD)
semPaths(fit)
mediationPlot(fit)
library(semMediation)
model='
knowledge =~ general+symptoms+treatmt
empathy =~ cognitiv+emotion+disposit+attitude
intervention =~ classrm+instruct
'
fit=sem(model,data=ADHD)
semPaths(fit)
mediationPlot(fit)
require(lavaan)
require(semMediation)
require(semPlot)
model='
knowledge =~ general+symptoms+treatmt
empathy =~ cognitiv+emotion+disposit+attitude
intervention =~ classrm+instruct
'
fit=sem(model,data=ADHD)
semPaths(fit)
mediationPlot(fit)
model=makeEquation(X=c("X1","X2"),M=c("M1","M2"),Y=c("Y1","Y2"))
cat(model)
fit=sem(model,data=data)
set.seed(1234)
X1 <- rnorm(100)
X2 <- c(rnorm(50),rnorm(50))
M1 <- 0.5*X1 + 0.5*X2 +rnorm(100)
M2 <-0.6*X1 +0.4*X2+rnorm(100)
Y1 <- 0.3*M1 + 0.4*M2 + rnorm(100)
Y2 <- 0.1*M1 + 0.5*M2 + rnorm(100)
data <- data.frame(X1 = X1, X2 = X2, Y1 = Y1, Y2 = Y2, M1 = M1, M2 = M2)
str(data)
require(lavaan)
require(semPlot)
require(semMediation)
require(ggplot2)
require(ReporteRs)
model=
"X=~X1+X2
"
model1=makeEquation(X="X",M=c("M1","M2"),Y="Y1")
model=paste0(model,model1)
fit=sem(model,data=data)
fit=sem(model,data=data)
summary(fit)
semPaths(fit,rotation=2,whatLabels = "std")
mediationPlot(fit,width=8,height=4)
mediationPlot(fit,whatLabels = "name")
mediationPlot(fit,whatLabels = "est")
mediationPlot(fit,regression=FALSE,residuals=FALSE,indirect=TRUE)
mediationPlot(fit,regression=FALSE,residuals=FALSE,secondIndirect=TRUE)
model=makeEquation(X=c("X1","X2"),M=c("M1","M2"),Y="Y1")
cat(model)
fit=sem(model,data=data)
semPaths(fit)
mediationPlot(fit)
model=makeEquation(X=c("X1","X2"),M=c("M1","M2"),Y=c("Y1","Y2"))
cat(model)
fit=sem(model,data=data)
semPaths(fit)
mediationPlot(fit)
library(semMediation)
require(lavaan)
require(semMediation)
require(semPlot)
model='
knowledge =~ general+symptoms+treatmt
empathy =~ cognitiv+emotion+disposit+attitude
intervention =~ classrm+instruct
'
fit=sem(model,data=ADHD)
semPaths(fit)
mediationPlot(fit)
fit
result=estimatesTable(fit,ci=TRUE)
df2Flextable(result)
semPaths(fit)
mediationPlot(fit)
source('~/ownCloud/Documents/semMediation/R/mediationPlot.R', echo=TRUE)
res=parameterEstimates(fit,standardized=TRUE)
res
df=fit2df(fit)
df
df1=addpos(df)
df1
if(mediationOnly) {
Mgroup=df1[substr(df1$group1,1,1)=="M",]$group1
Mgroup
df1=df1[df1$group1 %in% c("X","Y",Mgroup),]
res=res[(res$label!="")|((res$lhs %in% df1$text)&(res$rhs %in% df1$text)),]
res
}
df2=adjustPos(df1,maxx=maxx,maxy=maxy,height=height,width=width)
maxx=60;maxy=30;height=5;width=5;whatLabels="name";useLabel=TRUE;usecolor=TRUE
clean=TRUE;base_size=5;base_family="Arial"
mediationOnly=FALSE;residuals=TRUE;regression=TRUE
indirect=FALSE;secondIndirect=FALSE;mode=1
res=parameterEstimates(fit,standardized=TRUE)
res
df=fit2df(fit)
df
df1=addpos(df)
df1
if(mediationOnly) {
Mgroup=df1[substr(df1$group1,1,1)=="M",]$group1
Mgroup
df1=df1[df1$group1 %in% c("X","Y",Mgroup),]
res=res[(res$label!="")|((res$lhs %in% df1$text)&(res$rhs %in% df1$text)),]
res
}
df2=adjustPos(df1,maxx=maxx,maxy=maxy,height=height,width=width)
df2
df3=df2[df2$latent==FALSE,]
df3
df4=df2[df2$latent==TRUE,]
df4
resCor=res[res$op=="~~",]
if(!residuals) resCor=resCor[resCor$lhs!=resCor$rhs,]
resCor
df2
resCor=res[res$op=="~~",]
if(!residuals) resCor=resCor[resCor$lhs!=resCor$rhs,]
resCor
df2
df2
unique(df2$group1)
library(semMediation)
require(lavaan)
require(semMediation)
require(semPlot)
model='
knowledge =~ general+symptoms+treatmt
empathy =~ cognitiv+emotion+disposit+attitude
intervention =~ classrm+instruct
'
fit=sem(model,data=ADHD)
semPaths(fit)
mediationPlot(fit)
library(semMediation)
fit=sem(model,data=ADHD)
semPaths(fit)
mediationPlot(fit)
semPaths(fit)
semPaths(fit,whatLabels = "std")
library(semMediation)
semPaths(fit,whatLabels = "std")
mediationPlot(fit)
semPaths(fit,whatLabels = "std")
mediationPlot(fit)
