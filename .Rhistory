upper<-lower<-1
for(i in 1:length(HGroups)){
cat("i=",i,",upper=",upper,",lower=",lower,"\n")
temp=df$text[df$group1 == HGroups[i]]
add=1:length(temp)
mpos=ceiling(length(temp)/2)+1
mpos
if(length(temp)%%2==0){
add[(length(temp)/2+1):length(temp)]=add[(length(temp)/2+1):length(temp)]+1
}
df$x1[df$group1== HGroups[i]]=add+ifelse(upper<=lower,upper,lower)
df$x1[df$group1== paste0("M",i)]=mpos+ifelse(upper<=lower,upper,lower)
if(upper<=lower) {
upper=upper+add[length(add)]
df$y[df$group1== HGroups[i]]=1
} else{
lower=lower+add[length(add)]
df$y[df$group1== HGroups[i]]=2
}
}
max(upper,lower)
df$x1[df$x>=(max(df$x)-1)]
df
diff=max(upper,lower)-max(df$x)
diff
df$x1[df$x>=(max(df$x)-1)]
df$x1[df$x>=(max(df$x)-1)]=df$x1[df$x>=(max(df$x)-1)]+diff+2
if((length(unique(df$x1))==2) &(max(df$x1)==1)){
df$x1[df$x1==1]=4
}
#' add x1 position
#' @param df a data.frame
#' @export
addPos2=function(df){
df$x1=floor(df$x)
df
HGroups=unique(df$group1[stringr::str_detect(df$group1,"H")])
upper<-lower<-1
for(i in 1:length(HGroups)){
cat("i=",i,",upper=",upper,",lower=",lower,"\n")
temp=df$text[df$group1 == HGroups[i]]
add=1:length(temp)
mpos=ceiling(length(temp)/2)+1
mpos
if(length(temp)%%2==0){
add[(length(temp)/2+1):length(temp)]=add[(length(temp)/2+1):length(temp)]+1
}
df$x1[df$group1== HGroups[i]]=add+ifelse(upper<=lower,upper,lower)
df$x1[df$group1== paste0("M",i)]=mpos+ifelse(upper<=lower,upper,lower)
if(upper<=lower) {
upper=upper+add[length(add)]
df$y[df$group1== HGroups[i]]=1
} else{
lower=lower+add[length(add)]
df$y[df$group1== HGroups[i]]=2
}
}
df
diff=max(upper,lower)-max(df$x)
diff
df$x1[df$x>=(max(df$x)-1)]=df$x1[df$x>=(max(df$x)-1)]+diff+2
if((length(unique(df$x1))==2) &(max(df$x1)==1)){
df$x1[df$x1==1]=4
}
df
}
# whatLabels="std";mediationOnly=FALSE;residuals=FALSE;nodesep=NULL;ranksep=NULL
df=fit2df(fit)
df=addpos(df)
df
df1=addPos2(df)
df1
HGroups=unique(df$group1[stringr::str_detect(df$group1,"H")])
if(mediationOnly) {
delVars=df1$text[df1$group1 %in% c("0","5",HGroups)]
delVars
df1=df1[!(df1$text %in% delVars),]
}
H1vars=df1$text[df1$group1=="H1"]
H1vars
width<-max(df1$x1)+1
width
equation="digraph {\ngraph [rankdir = LR]\n"
if(is.null(ranksep)) { ranksep=0.75 }
if(is.null(nodesep)) { nodesep=0.25}
equation<-equation %>% paste0("ranksep=",ranksep,";\n")
equation<-equation %>% paste0("nodesep=",nodesep,";\n")
temp=paste0("t",0:(width-1))
temp
equation<-equation %>%
paste0("
subgraph cluster0{
style=invis;
node [style=invis]\n") %>%
paste0(str_flatten(temp,";"),"\n") %>%
paste0("edge[style=invis];\n",
str_flatten(temp,"->"),"\n}\n")
temp=df1$text[(df1$group1 %in% HGroups) $ d1$y==1]
temp1=df1$text[(df1$group1 %in% HGroups) $ d1$y==1 & df1$latent==FALSE]
library(semMediation)
require(lavaan)
require(semPlot)
require(semMediation)
require(DiagrammeR)
require(dplyr)
require(stringr)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model1
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
mediationPlot(fit)
semDiagram(fit)
semDiagram(fit)
library(semMediation)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model1
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2
dem61 =~ y3 + y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61","dem62"),Y="dem65")
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
library(semMediation)
# whatLabels="std";mediationOnly=FALSE;residuals=FALSE;nodesep=NULL;ranksep=NULL
df=fit2df(fit)
df=addpos(df)
df
df1=addPos2(df)
df1
mediationPlot(fit)
semPaths(fit)
semDiagram(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model1
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
# whatLabels="std";mediationOnly=FALSE;residuals=FALSE;nodesep=NULL;ranksep=NULL
df=fit2df(fit)
df=addpos(df)
df
df1=addPos2(df)
df1
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2
dem61 =~ y3 + y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61","dem62"),Y="dem65")
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
# whatLabels="std";mediationOnly=FALSE;residuals=FALSE;nodesep=NULL;ranksep=NULL
df=fit2df(fit)
df=addpos(df)
df
df1=addPos2(df)
df1
library(semMediation)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
library(semMediation)
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model1
model=paste0(model,model1)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
library(semMediation)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model1
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
mediationPlot(fit)
semDiagram(fit)
# whatLabels="std";mediationOnly=FALSE;residuals=FALSE;nodesep=NULL;ranksep=NULL
df=fit2df(fit)
df=addpos(df)
df
df1=addPos2(df)
df1
# whatLabels="std";mediationOnly=FALSE;residuals=FALSE;nodesep=NULL;ranksep=NULL
df=fit2df(fit)
df=addpos(df)
df
df$x1=floor(df$x)
df
HGroups=unique(df$group1[stringr::str_detect(df$group1,"H")])
upper<-lower<-0
for(i in 1:length(HGroups)){
cat("i=",i,",upper=",upper,",lower=",lower,"\n")
temp=df$text[df$group1 == HGroups[i]]
add=1:length(temp)
mpos=ceiling(length(temp)/2)+1
mpos
if(length(temp)%%2==0){
add[(length(temp)/2+1):length(temp)]=add[(length(temp)/2+1):length(temp)]+1
}
df$x1[df$group1== HGroups[i]]=add+ifelse(upper<=lower,upper,lower)
df$x1[df$group1== paste0("M",i)]=mpos+ifelse(upper<=lower,upper,lower)
df$y[df$group1== paste0("M",i)]=ifelse(upper<=lower,1,2)
if(upper<=lower) {
upper=upper+add[length(add)]
df$y[df$group1== HGroups[i]]=1
} else{
lower=lower+add[length(add)]
df$y[df$group1== HGroups[i]]=2
}
}
df
diff=max(upper,lower)-max(df$x)
diff
upper
lower
library(semMediation)
semPaths(fit)
semDiagram(fit)
library(semMediation)
library(semMediation)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2
dem61 =~ y3 + y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model1
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model1
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
fit <- sem(model,
data=PoliticalDemocracy)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model1
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2
dem61 =~ y3 + y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61","dem62"),Y="dem65")
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2
dem61 =~ y3 + y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61","dem62"),Y="dem65")
model1
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
# whatLabels="std";mediationOnly=FALSE;residuals=FALSE;nodesep=NULL;ranksep=NULL
df=fit2df(fit)
df=addpos(df)
df
df1=addPos2(df)
df1
library(semMediation)
semPaths(fit)
semDiagram(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
library(semMediation)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2
dem61 =~ y3 + y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61","dem62"),Y="dem65")
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data = HolzingerSwineford1939)
semPaths(fit,rotation=4,residual=FALSE,whatLabels = "std")
mediationPlot(fit,width=8,residuals=TRUE)
semDiagram(fit,residual=TRUE)
semDiagram(fit)
library(semMediation)
semDiagram(fit)
library(shiny)
ui <- fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel(),
mainPanel(
imageOutput("image")
)
)
)
server <- function(input, output){
output$image=renderImage({
"https://www.rstudio.com/wp-content/uploads/2016/09/RStudio-Logo-Blue-Gray-125.png"
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("My Shiny App"),
imageOutput("image")
)
server <- function(input, output){
output$image=renderImage({
"https://www.rstudio.com/wp-content/uploads/2016/09/RStudio-Logo-Blue-Gray-125.png"
})
}
shinyApp(ui, server)
require(lavaan)
require(semPlot)
require(semMediation)
require(DiagrammeR)
require(dplyr)
require(stringr)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3+ y4
dem61 =~ y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61"),Y="dem65")
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2
dem61 =~ y3 + y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61","dem62"),Y="dem65")
model1
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 +y3
dem61 =~ y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61","dem62"),Y="dem65")
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semPaths(fit)
semDiagram(fit)
model <- '
# latent variables
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2
dem61 =~ y3+ y4
dem62 =~  y5 + y6
dem65 =~ y7 + y8
'
model1=makeEquation(X="ind60",M=c("dem60","dem61","dem62"),Y="dem65")
model=paste0(model,model1)
cat(model)
fit <- sem(model,
data=PoliticalDemocracy)
semDiagram(fit)
